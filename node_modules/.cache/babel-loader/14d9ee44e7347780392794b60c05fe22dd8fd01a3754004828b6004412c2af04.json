{"ast":null,"code":"import swal from \"sweetalert\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport axios from \"axios\";\nexport default {\n  name: \"AllItem\",\n  data() {\n    return {\n      search: \"\",\n      headers: [{\n        text: \"Id\",\n        align: \"start\",\n        sortable: true,\n        value: \"id\"\n      }, {\n        text: \"Title\",\n        value: \"itemname\"\n      }, {\n        text: \"Category\",\n        value: \"itemcategory\"\n      }, {\n        text: \"Description\",\n        value: \"itemdes\"\n      }, {\n        text: \"Status\",\n        value: \"status\"\n      }, {\n        text: \"Item-Price\",\n        value: \"itemprice\"\n      }, {\n        text: \"Action\",\n        value: \"actions\"\n      }],\n      items: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"allitem\"]),\n    filteredItems() {\n      return this.allitem.filter(item => {\n        console.log(item);\n        return item.itemname.match(this.search);\n      });\n    }\n  },\n  methods: {\n    ...mapActions([\"getItem\", \"deletItem\"]),\n    removetask(id) {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Once deleted, you will not be able to recover this task details!\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          this.deletItem(id);\n          swal(\"Poof! Your task details has been deleted!\", {\n            icon: \"success\"\n          });\n          this.$router.go();\n        } else {\n          swal(\"Your task details  is safe!\");\n        }\n      });\n    },\n    async changeStatus(item) {\n      const response = await axios.put(`http://localhost:3000/item/${item.id}`, {\n        itemname: item.itemname,\n        itemcategory: item.itemcategory,\n        itemdes: item.itemdes,\n        status: item.status.toString(),\n        itemprice: item.itemprice\n      });\n      console.log(response, \"edit\");\n    }\n  },\n  created() {\n    this.getItem();\n  }\n};","map":{"version":3,"names":["swal","mapGetters","mapActions","axios","name","data","search","headers","text","align","sortable","value","items","computed","filteredItems","allitem","filter","item","console","log","itemname","match","methods","removetask","id","title","icon","buttons","dangerMode","then","willDelete","deletItem","$router","go","changeStatus","response","put","itemcategory","itemdes","status","toString","itemprice","created","getItem"],"sources":["src/views/Items/AllItem.vue"],"sourcesContent":["<template>\r\n  <v-container fluid>\r\n    <v-row>\r\n      <v-col cols=\"2\"></v-col>\r\n      <v-col cols=\"8\">\r\n        <v-main>\r\n          <router-link style=\"text-decoration: none\" to=\"/addnewitem\"\r\n            ><v-btn color=\"primary\" class=\"mx-4\"> Add Item </v-btn></router-link\r\n          >\r\n\r\n          <router-link style=\"text-decoration: none\" to=\"/allcategories\"\r\n            ><v-btn color=\"success\" class=\"mr-4\">\r\n              All Categories\r\n            </v-btn></router-link\r\n          >\r\n          <router-link style=\"text-decoration: none\" to=\"/\"\r\n            ><v-btn color=\"warning\" class=\"mr-4 dark\">\r\n              Home\r\n            </v-btn></router-link\r\n          ></v-main\r\n        >\r\n        <v-card-title>\r\n          <v-text-field\r\n            v-model=\"search\"\r\n            append-icon=\"mdi-magnify\"\r\n            label=\"Search\"\r\n            single-line\r\n            hide-details\r\n          ></v-text-field>\r\n        </v-card-title>\r\n        <div>\r\n          <v-data-table :headers=\"headers\" :items=\"filteredItems\">\r\n            <template v-slot:[`item.itemprice`]=\"{ item }\">\r\n              {{ item.itemprice | currency }}\r\n            </template>\r\n            <template v-slot:[`item.status`]=\"{ item }\">\r\n              <v-switch\r\n                flat\r\n                v-model=\"item.status\"\r\n                color=\"success\"\r\n                :label=\"`${item.status == 'true' ? 'Active' : 'Deactive'}`\"\r\n                @change=\"changeStatus(item)\"\r\n              ></v-switch>\r\n            </template>\r\n            <template v-slot:[`item.actions`]=\"{ item }\">\r\n              <router-link\r\n                style=\"text-decoration: none\"\r\n                :to=\"`/edititem/${item.id}`\"\r\n                ><v-icon small class=\"mr-2\"> mdi-pencil </v-icon></router-link\r\n              >\r\n              <v-icon small @click=\"removetask(item.id)\"> mdi-delete </v-icon>\r\n            </template>\r\n          </v-data-table>\r\n        </div>\r\n      </v-col>\r\n      <v-col cols=\"2\"></v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n<script>\r\nimport swal from \"sweetalert\";\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"AllItem\",\r\n  data() {\r\n    return {\r\n      search: \"\",\r\n      headers: [\r\n        {\r\n          text: \"Id\",\r\n          align: \"start\",\r\n          sortable: true,\r\n          value: \"id\",\r\n        },\r\n        { text: \"Title\", value: \"itemname\" },\r\n        { text: \"Category\", value: \"itemcategory\" },\r\n        { text: \"Description\", value: \"itemdes\" },\r\n        { text: \"Status\", value: \"status\" },\r\n        { text: \"Item-Price\", value: \"itemprice\" },\r\n        { text: \"Action\", value: \"actions\" },\r\n      ],\r\n      items: [],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"allitem\"]),\r\n    filteredItems() {\r\n      return this.allitem.filter((item) => {\r\n        console.log(item);\r\n        return item.itemname.match(this.search);\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions([\"getItem\", \"deletItem\"]),\r\n\r\n    removetask(id) {\r\n      swal({\r\n        title: \"Are you sure?\",\r\n        text: \"Once deleted, you will not be able to recover this task details!\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n      }).then((willDelete) => {\r\n        if (willDelete) {\r\n          this.deletItem(id);\r\n          swal(\"Poof! Your task details has been deleted!\", {\r\n            icon: \"success\",\r\n          });\r\n          this.$router.go();\r\n        } else {\r\n          swal(\"Your task details  is safe!\");\r\n        }\r\n      });\r\n    },\r\n    async changeStatus(item) {\r\n      const response = await axios.put(\r\n        `http://localhost:3000/item/${item.id}`,\r\n        {\r\n          itemname: item.itemname,\r\n          itemcategory: item.itemcategory,\r\n          itemdes: item.itemdes,\r\n          status: item.status.toString(),\r\n          itemprice: item.itemprice,\r\n        }\r\n      );\r\n      console.log(response, \"edit\");\r\n    },\r\n  },\r\n  created() {\r\n    this.getItem();\r\n  },\r\n};\r\n</script>"],"mappings":"AA4DA,OAAAA,IAAA;AACA,SAAAC,UAAA,EAAAC,UAAA;AACA,OAAAC,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,KAAA;MACA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,GACA;QAAAH,IAAA;QAAAG,KAAA;MAAA,EACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAZ,UAAA;IACAa,cAAA;MACA,YAAAC,OAAA,CAAAC,MAAA,CAAAC,IAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;QACA,OAAAA,IAAA,CAAAG,QAAA,CAAAC,KAAA,MAAAf,MAAA;MACA;IACA;EACA;EACAgB,OAAA;IACA,GAAApB,UAAA;IAEAqB,WAAAC,EAAA;MACAxB,IAAA;QACAyB,KAAA;QACAjB,IAAA;QACAkB,IAAA;QACAC,OAAA;QACAC,UAAA;MACA,GAAAC,IAAA,CAAAC,UAAA;QACA,IAAAA,UAAA;UACA,KAAAC,SAAA,CAAAP,EAAA;UACAxB,IAAA;YACA0B,IAAA;UACA;UACA,KAAAM,OAAA,CAAAC,EAAA;QACA;UACAjC,IAAA;QACA;MACA;IACA;IACA,MAAAkC,aAAAjB,IAAA;MACA,MAAAkB,QAAA,SAAAhC,KAAA,CAAAiC,GAAA,CACA,8BAAAnB,IAAA,CAAAO,EAAA,IACA;QACAJ,QAAA,EAAAH,IAAA,CAAAG,QAAA;QACAiB,YAAA,EAAApB,IAAA,CAAAoB,YAAA;QACAC,OAAA,EAAArB,IAAA,CAAAqB,OAAA;QACAC,MAAA,EAAAtB,IAAA,CAAAsB,MAAA,CAAAC,QAAA;QACAC,SAAA,EAAAxB,IAAA,CAAAwB;MACA,EACA;MACAvB,OAAA,CAAAC,GAAA,CAAAgB,QAAA;IACA;EACA;EACAO,QAAA;IACA,KAAAC,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}