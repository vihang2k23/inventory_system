{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data: () => ({\n    valid: true,\n    item: [],\n    nameRules: [v => !!v || \"Name is required\", v => v && v.length <= 10 || \"Name must be less than 10 characters\"],\n    categoryRules: [v => !!v || \"Category is required\", v => v && v.length <= 10 || \"Name must be less than 10 characters\"],\n    DescriptionRules: [v => !!v || \"Description is required\", v => v && v.length <= 50 || \"Description must be valid\"],\n    PriceRules: [v => !!v || \"Price is required\"]\n  }),\n  //     filters:{\n  // currency : function(value){\n  //     return \"$ \" + parseFloat(value).toFixed(2);\n  // }\n  //     },\n  async mounted() {\n    axios.get(\"http://localhost:3000/item/\" + this.$route.params.id).then(res => {\n      this.item = res.data;\n    }).catch(error => {\n      console.log(error);\n      this.errored = true;\n    }).finally(() => this.loading = false);\n    console.log(this.todata);\n  },\n  // Update Method\n  methods: {\n    async updatedata(id) {\n      console.log(id);\n      try {\n        const user = await axios.put(\"http://localhost:3000/item/\" + id, {\n          itemname: this.item.itemname,\n          itemcategory: this.item.itemcategory,\n          itemdes: this.item.itemdes,\n          status: this.item.status,\n          itemprice: this.item.itemprice\n        });\n        console.log(user, \"sucessss\");\n        this.$router.push(\"/allitem\");\n        this.alert(\"Data Update Successfully\");\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    alert(data) {\n      this.$swal(data);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","valid","item","nameRules","v","length","categoryRules","DescriptionRules","PriceRules","mounted","get","$route","params","id","then","res","catch","error","console","log","errored","finally","loading","todata","methods","updatedata","user","put","itemname","itemcategory","itemdes","status","itemprice","$router","push","alert","e","$swal"],"sources":["src/views/Items/EditItem.vue"],"sourcesContent":["<template>\r\n    <v-container fluid>\r\n      <v-row>\r\n        <v-col cols=\"2\"></v-col>\r\n        <v-col cols=\"8\">\r\n          <!-- Form for edit item -->\r\n          <v-form ref=\"form\" @submit.prevent=\"updatedata(item.id)\" v-model=\"valid\" lazy-validation>\r\n            <v-text-field\r\n              v-model.lazy=\"item.itemname\"\r\n              :counter=\"10\"\r\n              :rules=\"nameRules\"\r\n              label=\"Name\"\r\n              required\r\n            ></v-text-field>\r\n            <v-text-field\r\n              v-model.lazy=\"item.itemcategory\"\r\n              :counter=\"10\"\r\n              :rules=\"categoryRules\"\r\n              label=\"Category\"\r\n              required\r\n            ></v-text-field>\r\n            <v-textarea\r\n              v-model.lazy=\"item.itemdes\"\r\n              :counter=\"50\"\r\n              :rules=\"DescriptionRules\"\r\n              label=\"Description\"\r\n              required\r\n            ></v-textarea>\r\n            <v-text-field\r\n              v-model.lazy=\"item.itemprice\"\r\n              :counter=\"10\"\r\n              :rules=\"PriceRules\"\r\n              label=\"ItemPrice\"\r\n              type=\"number\"\r\n              required\r\n            ></v-text-field>\r\n            <v-radio-group v-model.lazy=\"item.status\" row >\r\n              <v-radio label=\"Active\" value=\"true\"></v-radio>\r\n              <v-radio label=\"DeActive\" value=\"false\"></v-radio>\r\n            </v-radio-group>\r\n  \r\n            <v-btn\r\n              :disabled=\"!valid\"\r\n              color=\"success\"\r\n              class=\"mr-4\"\r\n              type=\"submit\"\r\n            >\r\n              EditItem\r\n            </v-btn>\r\n  \r\n          </v-form></v-col\r\n        >\r\n\r\n       \r\n      </v-row>\r\n    </v-container>\r\n  </template>\r\n        <script>\r\nimport axios from 'axios';\r\n  export default {\r\n    data: () => ({\r\n      valid: true,\r\n      item: [],\r\n      nameRules: [\r\n        (v) => !!v || \"Name is required\",\r\n        (v) => (v && v.length <= 10) || \"Name must be less than 10 characters\",\r\n      ],\r\n      categoryRules: [\r\n        (v) => !!v || \"Category is required\",\r\n        (v) => (v && v.length <= 10) || \"Name must be less than 10 characters\",\r\n      ],\r\n      DescriptionRules: [\r\n        (v) => !!v || \"Description is required\",\r\n        (v) => (v && v.length <= 50) || \"Description must be valid\",\r\n      ],\r\n      PriceRules:[\r\n      (v) => !!v || \"Price is required\",\r\n        \r\n      ]\r\n      \r\n    }),\r\n//     filters:{\r\n// currency : function(value){\r\n//     return \"$ \" + parseFloat(value).toFixed(2);\r\n// }\r\n//     },\r\nasync mounted() {\r\n    axios\r\n      .get(\"http://localhost:3000/item/\" + this.$route.params.id)\r\n      .then((res) => {\r\n        this.item = res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.errored = true;\r\n      })\r\n      .finally(() => (this.loading = false));\r\n    console.log(this.todata);\r\n  },\r\n  // Update Method\r\n  methods: {\r\n    async updatedata(id) {\r\n        console.log(id);\r\n      try {\r\n      \r\n        const user = await axios.put(\"http://localhost:3000/item/\" + id, {\r\n            itemname: this.item.itemname,\r\n        itemcategory: this.item.itemcategory,\r\n        itemdes:this.item.itemdes,\r\n        status: this.item.status,\r\n        itemprice:this.item.itemprice\r\n         \r\n        });\r\n        console.log(user, \"sucessss\");\r\n        this.$router.push(\"/allitem\");\r\n        this.alert(\"Data Update Successfully\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n    alert(data) {\r\n      this.$swal(data);\r\n    },\r\n  },\r\n  };\r\n  </script>"],"mappings":";AA0DA,OAAAA,KAAA;AACA;EACAC,IAAA,EAAAA,CAAA;IACAC,KAAA;IACAC,IAAA;IACAC,SAAA,GACAC,CAAA,MAAAA,CAAA,wBACAA,CAAA,IAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA,iDACA;IACAC,aAAA,GACAF,CAAA,MAAAA,CAAA,4BACAA,CAAA,IAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA,iDACA;IACAE,gBAAA,GACAH,CAAA,MAAAA,CAAA,+BACAA,CAAA,IAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA,sCACA;IACAG,UAAA,GACAJ,CAAA,MAAAA,CAAA;EAIA;EACA;EACA;EACA;EACA;EACA;EACA,MAAAK,QAAA;IACAV,KAAA,CACAW,GAAA,sCAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA,EACAC,IAAA,CAAAC,GAAA;MACA,KAAAb,IAAA,GAAAa,GAAA,CAAAf,IAAA;IACA,GACAgB,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA,KAAAG,OAAA;IACA,GACAC,OAAA,YAAAC,OAAA;IACAJ,OAAA,CAAAC,GAAA,MAAAI,MAAA;EACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAAZ,EAAA;MACAK,OAAA,CAAAC,GAAA,CAAAN,EAAA;MACA;QAEA,MAAAa,IAAA,SAAA3B,KAAA,CAAA4B,GAAA,iCAAAd,EAAA;UACAe,QAAA,OAAA1B,IAAA,CAAA0B,QAAA;UACAC,YAAA,OAAA3B,IAAA,CAAA2B,YAAA;UACAC,OAAA,OAAA5B,IAAA,CAAA4B,OAAA;UACAC,MAAA,OAAA7B,IAAA,CAAA6B,MAAA;UACAC,SAAA,OAAA9B,IAAA,CAAA8B;QAEA;QACAd,OAAA,CAAAC,GAAA,CAAAO,IAAA;QACA,KAAAO,OAAA,CAAAC,IAAA;QACA,KAAAC,KAAA;MACA,SAAAC,CAAA;QACAlB,OAAA,CAAAC,GAAA,CAAAiB,CAAA;MACA;IACA;IACAD,MAAAnC,IAAA;MACA,KAAAqC,KAAA,CAAArC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}