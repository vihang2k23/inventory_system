{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data: () => ({\n    valid: true,\n    category: [],\n    nameRules: [v => !!v || \"Name is required\", v => v && v.length <= 10 || \"Name must be less than 10 characters\"],\n    DescriptionRules: [v => !!v || \"Description is required\", v => v && v.length <= 50 || \"Description must be valid\"]\n  }),\n  async mounted() {\n    axios.get(\"http://localhost:3000/category/\" + this.$route.params.id).then(res => {\n      this.category = res.data;\n    }).catch(error => {\n      console.log(error);\n      this.errored = true;\n    }).finally(() => this.loading = false);\n  },\n  // Update Method\n  methods: {\n    async updatedata(id) {\n      console.log(id);\n      try {\n        const user = await axios.put(`http://localhost:3000/category/${id}`, {\n          categoryname: this.category.categoryname,\n          categorydes: this.category.categorydes,\n          status: this.category.status\n        });\n        console.log(user, \"sucessss\");\n        this.$router.push(\"/allcategories\");\n        this.alert(\"Data Update Successfully\");\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    alert(data) {\n      this.$swal(data);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","valid","category","nameRules","v","length","DescriptionRules","mounted","get","$route","params","id","then","res","catch","error","console","log","errored","finally","loading","methods","updatedata","user","put","categoryname","categorydes","status","$router","push","alert","e","$swal"],"sources":["src/views/Categories/EditCategories.vue"],"sourcesContent":["<template>\r\n  <v-container fluid>\r\n    <v-row>\r\n      <v-col cols=\"2\"></v-col>\r\n      <v-col cols=\"8\">\r\n        <v-form\r\n          ref=\"form\"\r\n          @submit.prevent=\"updatedata(category.id)\"\r\n          v-model=\"valid\"\r\n          lazy-validation\r\n        >\r\n          <v-text-field\r\n            v-model.lazy=\"category.categoryname\"\r\n            :counter=\"10\"\r\n            :rules=\"nameRules\"\r\n            label=\"Name\"\r\n            required\r\n          ></v-text-field>\r\n\r\n          <v-textarea\r\n            v-model.lazy=\"category.categorydes\"\r\n            :counter=\"50\"\r\n            :rules=\"DescriptionRules\"\r\n            label=\"Description\"\r\n            required\r\n          ></v-textarea>\r\n\r\n          <v-radio-group v-model.lazy=\"category.status\" row>\r\n            <v-radio label=\"Active\" value=true></v-radio>\r\n            <v-radio label=\"Deactive\" value=false></v-radio>\r\n          </v-radio-group>\r\n\r\n          <v-btn :disabled=\"!valid\" color=\"success\" class=\"mr-4\" type=\"submit\">\r\n            EditCategory\r\n          </v-btn>\r\n        </v-form></v-col\r\n      >\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n        <script>\r\n     \r\n\r\nimport axios from  \"axios\";\r\n\r\n\r\n  export default {\r\n    data: () => ({\r\n      valid: true,\r\n      category: [],\r\n      nameRules: [\r\n        (v) => !!v || \"Name is required\",\r\n        (v) => (v && v.length <= 10) || \"Name must be less than 10 characters\",\r\n      ],\r\n  \r\n      DescriptionRules: [\r\n        (v) => !!v || \"Description is required\",\r\n        (v) => (v && v.length <= 50) || \"Description must be valid\",\r\n      ],\r\n      \r\n    }),\r\n    \r\n  \r\n        async mounted() {\r\n    axios\r\n      .get(\"http://localhost:3000/category/\" + this.$route.params.id)\r\n      .then((res) => {\r\n        this.category = res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.errored = true;\r\n      })\r\n      .finally(() => (this.loading = false));\r\n\r\n},\r\n  // Update Method\r\n  methods: {\r\n    \r\n    async updatedata(id) {\r\n        console.log(id);\r\n      try {\r\n      \r\n        const user = await axios.put(`http://localhost:3000/category/${id}` , {\r\n            categoryname:this.category.categoryname,\r\n            categorydes:this.category.categorydes,\r\n            status:this.category.status\r\n         \r\n        });\r\n        console.log(user, \"sucessss\");\r\n      \r\n        this.$router.push(\"/allcategories\");\r\n        this.alert(\"Data Update Successfully\");\r\n        \r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n    alert(data) {\r\n      this.$swal(data);\r\n    },\r\n    },\r\n    \r\n  };\r\n  </script>"],"mappings":";AA2CA,OAAAA,KAAA;AAGA;EACAC,IAAA,EAAAA,CAAA;IACAC,KAAA;IACAC,QAAA;IACAC,SAAA,GACAC,CAAA,MAAAA,CAAA,wBACAA,CAAA,IAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA,iDACA;IAEAC,gBAAA,GACAF,CAAA,MAAAA,CAAA,+BACAA,CAAA,IAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA;EAGA;EAGA,MAAAE,QAAA;IACAR,KAAA,CACAS,GAAA,0CAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA,EACAC,IAAA,CAAAC,GAAA;MACA,KAAAX,QAAA,GAAAW,GAAA,CAAAb,IAAA;IACA,GACAc,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA,KAAAG,OAAA;IACA,GACAC,OAAA,YAAAC,OAAA;EAEA;EACA;EACAC,OAAA;IAEA,MAAAC,WAAAX,EAAA;MACAK,OAAA,CAAAC,GAAA,CAAAN,EAAA;MACA;QAEA,MAAAY,IAAA,SAAAxB,KAAA,CAAAyB,GAAA,mCAAAb,EAAA;UACAc,YAAA,OAAAvB,QAAA,CAAAuB,YAAA;UACAC,WAAA,OAAAxB,QAAA,CAAAwB,WAAA;UACAC,MAAA,OAAAzB,QAAA,CAAAyB;QAEA;QACAX,OAAA,CAAAC,GAAA,CAAAM,IAAA;QAEA,KAAAK,OAAA,CAAAC,IAAA;QACA,KAAAC,KAAA;MAEA,SAAAC,CAAA;QACAf,OAAA,CAAAC,GAAA,CAAAc,CAAA;MACA;IACA;IACAD,MAAA9B,IAAA;MACA,KAAAgC,KAAA,CAAAhC,IAAA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}